1. Oque é RUP (Rational Unified Process) e qual é o seu objetivo principal? >  É um processo de engenharia de software que apoia o desenvolvimento orientado a objetos, com o objetivo principal de atender às necessidades dos usuários e garantir alta qualidade de software dentro de cronograma e orçamento.

2. Quais são as quatro fases do RUP e o que é feito em cada uma delas? > Concepção/Iniciação: Comunicação com o cliente, planejamento e levantamento de requisitos.

Elaboração: Análise detalhada do domínio do problema e revisão de riscos.

Construção: Implementação do software e realização de testes.

Transição: Entrega do software ao usuário, treinamento e testes da versão beta.

3. Quais são os principais papeis envolvidos no teste de software? >  Testador, Analista de Testes, Projetista de Testes e Gerente de Testes.

4. Qual é a importância do teste de software no mercado atual? >  Garante a confiabilidade do produto, reduz riscos de falhas e contribui para a qualidade dos sistemas, sendo essencial para a competitividade no mercado atual.

5. Cite dois exemplos de falhas em software que causaram problemas financeiros ou de reputação para as empresas. > Em abril de 2015, uma falha de hardware e software na Bloomberg paralisou partes do centro financeiro de Londres, afetando cerca de 320.000 usuários globais de seus terminais, que custavam $20.000 por ano cada.;
Em abril de 2016, Nissan fez recall de 3 milhões de carros nos EUA por falha de software nos sensores de airbag, que classificavam incorretamente o passageiro, resultando em airbags não inflando.

6.  Explique a importância do planejamento na fase de Concepção/Iniciação do RUP. > O planejamento é crucial para avaliar riscos, estimar custos e prazos, e estabelecer prioridades, garantindo que todas as partes interessadas concordem com o escopo do projeto.

7.  Descreva as atividades que são realizadas na fase de Elaboração do RUP. > Modelagem do Processo: Cria desenhos do fluxo de trabalho.
Análise Detalhada dos Requisitos: Explora profundamente o que o sistema precisa fazer.
Revisão de Riscos: Verifica e protege contra problemas grandes.
Definição da Arquitetura do Sistema: Planeja como o sistema será construído.

8. Cite três exemplos de falhas em software que causaram problemas financeiros ou de reputação para as empresas. > Falha no software da Boeing 737 MAX: Erros no sistema de controle de voo levaram a dois acidentes fatais, resultando em perdas financeiras significativas e danos à reputação da empresa.

Bug do Y2K: A preocupação com a falha de software relacionada ao ano 2000 causou gastos massivos em atualizações e correções, afetando empresas globalmente.

Erro no software de controle da Therac-25: Falhas no sistema de radiação resultaram em overdoses letais, levando a processos judiciais e danos irreparáveis à reputação da empresa.

9. Crie um cenário hipotético em que o TMMi seria útil para uma empresa que deseja melhorar a qualidade de seus testes. > Uma empresa que desenvolve sistemas de motion capture está enfrentando um aumento negativo nas avaliações sobre partes do sistema. Ela resolve implementar o TMMi, visando melhorar todo o processo de testes e estabelecer um plano de melhoria geral. Ela acaba não aderindo 100% aos métodos, mas avalia todo o processo e absorve boa parte dos métodos, resultando em um produto mais confiável e seguro.

10. Explique a diferença entre Controle da Qualidade e Garantia da Qualidade de Software e como o teste de software se encaixa em ambos os conceitos. > Controle da Qualidade refere-se a atividades que garantem que o produto final atenda aos padrões de qualidade, enquanto Garantia da Qualidade envolve processos que asseguram que as práticas de desenvolvimento sejam seguidas.